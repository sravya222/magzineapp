name: Deploy AWS Lambda and API Gateway (Update Only)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-2

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 3Ô∏è‚É£ Update existing Lambda functions only
      - name: Update existing Lambda functions
        run: |
          echo "üì¶ Updating Lambda functions (skipping creation)..."
          for file in lambda_functions/*.zip; do
            LAMBDA_NAME=$(basename "$file" .zip)
            echo "üîπ Checking $LAMBDA_NAME"

            if aws lambda get-function --function-name "$LAMBDA_NAME" --region $AWS_REGION > /dev/null 2>&1; then
              echo "üîÑ Updating Lambda function: $LAMBDA_NAME"
              aws lambda update-function-code \
                --function-name "$LAMBDA_NAME" \
                --zip-file "fileb://$file" \
                --region $AWS_REGION
            else
              echo "‚ö†Ô∏è Lambda $LAMBDA_NAME does not exist ‚Äî skipping creation"
            fi
          done

      # 4Ô∏è‚É£ Update existing API Gateway (skip creation)
      - name: Update existing API Gateway
        run: |
          if [ -f "apis.json" ]; then
            echo "üåê Checking existing APIs..."

            # Fetch API by name from apis.json (assuming "Name" field exists)
            API_NAME=$(jq -r '.Name' apis.json)
            API_ID=$(aws apigatewayv2 get-apis --region $AWS_REGION --query "Items[?Name=='$API_NAME'].ApiId" --output text)

            if [ -n "$API_ID" ]; then
              echo "üîÑ Updating API Gateway: $API_NAME ($API_ID)"
              aws apigatewayv2 update-api \
                --api-id "$API_ID" \
                --region $AWS_REGION \
                --cli-input-json "file://apis.json"
            else
              echo "‚ö†Ô∏è API named '$API_NAME' not found ‚Äî skipping creation"
            fi
          else
            echo "‚ö†Ô∏è No apis.json file found in repository root"
          fi
